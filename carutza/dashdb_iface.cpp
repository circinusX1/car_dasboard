/*
--------------------------------------------------------------------------------
Author:     Octavian Marius Chincisan @  July-Sept 2013
Project:    CARUTZA
--------------------------------------------------------------------------------

 This file is part of DASHSASH dashboard

    CARUTZA is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    CARUTZA is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with CARUTZA.  If not, see <http://www.gnu.org/licenses/>.
*/
/*-----------------------------------------------------------------------------
-----------------------------------------------------------------------------*/
/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -c dashdbIfAdaptor -a dashdb_iface.h:dashdb_iface.cpp dashdb.xml
 *
 * qdbusxml2cpp is Copyright (C) 2012 Digia Plc and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "dashdb_iface.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class dashdbIfAdaptor
 */

dashdbIfAdaptor::dashdbIfAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

/*--------------------------------------------------------------------------------------
  -------------------------------------------------------------------------------------*/
dashdbIfAdaptor::~dashdbIfAdaptor()
{
    // destructor
}

/*--------------------------------------------------------------------------------------
  -------------------------------------------------------------------------------------*/
void dashdbIfAdaptor::clicked()
{
    // handle method call com.zirexix.carowa.clicked
    QMetaObject::invokeMethod(parent(), "clicked");
}

/*--------------------------------------------------------------------------------------
  -------------------------------------------------------------------------------------*/
void dashdbIfAdaptor::notify(const QString &name, const QVariantMap &customdata)
{
    // handle method call com.zirexix.carowa.notify
    QMetaObject::invokeMethod(parent(), "notify", Q_ARG(QString, name), Q_ARG(QVariantMap, customdata));
}

