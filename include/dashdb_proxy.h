/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -v -c dashdbIf -p dashdb_proxy.h:dashdb_proxy.cpp dashdb.xml
 *
 * qdbusxml2cpp is Copyright (C) 2012 Digia Plc and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef DASHDB_PROXY_H_1379622453
#define DASHDB_PROXY_H_1379622453

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface com.zirexix.carowa
 */
class dashdbIf: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "com.zirexix.carowa"; }

public:
    dashdbIf(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~dashdbIf();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<> clicked()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("clicked"), argumentList);
    }

    inline QDBusPendingReply<> notify(const QString &name, const QVariantMap &customdata)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(name) << QVariant::fromValue(customdata);
        return asyncCallWithArgumentList(QLatin1String("notify"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void user_click(const QString &eventkind);
};

namespace com {
  namespace zirexix {
    typedef ::dashdbIf carowa;
  }
}
#endif
